/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_WriteBatchWithIndex */

#ifndef _Included_org_rocksdb_WriteBatchWithIndex
#define _Included_org_rocksdb_WriteBatchWithIndex
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    disposeInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_disposeInternal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    count0
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_WriteBatchWithIndex_count0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    put
 * Signature: (J[BI[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_put__J_3BI_3BI
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    put
 * Signature: (J[BI[BIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_put__J_3BI_3BIJ
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    putDirect
 * Signature: (JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;IIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_putDirect
  (JNIEnv *, jobject, jlong, jobject, jint, jint, jobject, jint, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    merge
 * Signature: (J[BI[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_merge__J_3BI_3BI
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    merge
 * Signature: (J[BI[BIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_merge__J_3BI_3BIJ
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    delete
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_delete__J_3BI
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    delete
 * Signature: (J[BIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_delete__J_3BIJ
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    singleDelete
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_singleDelete__J_3BI
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    singleDelete
 * Signature: (J[BIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_singleDelete__J_3BIJ
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    deleteDirect
 * Signature: (JLjava/nio/ByteBuffer;IIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_deleteDirect
  (JNIEnv *, jobject, jlong, jobject, jint, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    deleteRange
 * Signature: (J[BI[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_deleteRange__J_3BI_3BI
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    deleteRange
 * Signature: (J[BI[BIJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_deleteRange__J_3BI_3BIJ
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    putLogData
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_putLogData
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    clear0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_clear0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    setSavePoint0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_setSavePoint0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    rollbackToSavePoint0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_rollbackToSavePoint0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    popSavePoint
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_popSavePoint
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    setMaxBytes
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_WriteBatchWithIndex_setMaxBytes
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    getWriteBatch
 * Signature: (J)Lorg/rocksdb/WriteBatch;
 */
JNIEXPORT jobject JNICALL Java_org_rocksdb_WriteBatchWithIndex_getWriteBatch
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    newWriteBatchWithIndex
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_WriteBatchWithIndex_newWriteBatchWithIndex__
  (JNIEnv *, jclass);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    newWriteBatchWithIndex
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_WriteBatchWithIndex_newWriteBatchWithIndex__Z
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    newWriteBatchWithIndex
 * Signature: (JBIZ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_WriteBatchWithIndex_newWriteBatchWithIndex__JBIZ
  (JNIEnv *, jclass, jlong, jbyte, jint, jboolean);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    iterator0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_WriteBatchWithIndex_iterator0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    iterator1
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_WriteBatchWithIndex_iterator1
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    iteratorWithBase
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_WriteBatchWithIndex_iteratorWithBase
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    getFromBatch
 * Signature: (JJ[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_rocksdb_WriteBatchWithIndex_getFromBatch__JJ_3BI
  (JNIEnv *, jobject, jlong, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    getFromBatch
 * Signature: (JJ[BIJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_rocksdb_WriteBatchWithIndex_getFromBatch__JJ_3BIJ
  (JNIEnv *, jobject, jlong, jlong, jbyteArray, jint, jlong);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    getFromBatchAndDB
 * Signature: (JJJ[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_rocksdb_WriteBatchWithIndex_getFromBatchAndDB__JJJ_3BI
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_WriteBatchWithIndex
 * Method:    getFromBatchAndDB
 * Signature: (JJJ[BIJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_rocksdb_WriteBatchWithIndex_getFromBatchAndDB__JJJ_3BIJ
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray, jint, jlong);

#ifdef __cplusplus
}
#endif
#endif
