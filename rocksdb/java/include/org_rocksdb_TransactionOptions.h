/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_TransactionOptions */

#ifndef _Included_org_rocksdb_TransactionOptions
#define _Included_org_rocksdb_TransactionOptions
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    newTransactionOptions
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_TransactionOptions_newTransactionOptions
  (JNIEnv *, jclass);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    isSetSnapshot
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_TransactionOptions_isSetSnapshot
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    setSetSnapshot
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_setSetSnapshot
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    isDeadlockDetect
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_TransactionOptions_isDeadlockDetect
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    setDeadlockDetect
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_setDeadlockDetect
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    getLockTimeout
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_TransactionOptions_getLockTimeout
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    setLockTimeout
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_setLockTimeout
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    getExpiration
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_TransactionOptions_getExpiration
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    setExpiration
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_setExpiration
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    getDeadlockDetectDepth
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_TransactionOptions_getDeadlockDetectDepth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    setDeadlockDetectDepth
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_setDeadlockDetectDepth
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    getMaxWriteBatchSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_TransactionOptions_getMaxWriteBatchSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    setMaxWriteBatchSize
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_setMaxWriteBatchSize
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_rocksdb_TransactionOptions
 * Method:    disposeInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_TransactionOptions_disposeInternal
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
