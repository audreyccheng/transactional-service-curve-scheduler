/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_RocksIterator */

#ifndef _Included_org_rocksdb_RocksIterator
#define _Included_org_rocksdb_RocksIterator
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    disposeInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_disposeInternal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    isValid0
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_RocksIterator_isValid0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekToFirst0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekToFirst0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekToLast0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekToLast0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    next0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_next0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    prev0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_prev0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    refresh0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_refresh0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seek0
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seek0
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekForPrev0
 * Signature: (J[BI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekForPrev0
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekDirect0
 * Signature: (JLjava/nio/ByteBuffer;II)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekDirect0
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekByteArray0
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekByteArray0
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekForPrevDirect0
 * Signature: (JLjava/nio/ByteBuffer;II)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekForPrevDirect0
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    seekForPrevByteArray0
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_seekForPrevByteArray0
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    status0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_RocksIterator_status0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    key0
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_rocksdb_RocksIterator_key0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    value0
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_rocksdb_RocksIterator_value0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    keyDirect0
 * Signature: (JLjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksIterator_keyDirect0
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    keyByteArray0
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksIterator_keyByteArray0
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    valueDirect0
 * Signature: (JLjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksIterator_valueDirect0
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     org_rocksdb_RocksIterator
 * Method:    valueByteArray0
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_RocksIterator_valueByteArray0
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
